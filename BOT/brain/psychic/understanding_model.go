/* Модель понимания объектов внимания (типа ActionsImage), имеющих значимость в правилах эпиз.памяти.
Показ на пульте - в episodic_memory_pult.go - func Get_undestand_model_from_object

Модель понимани для данного объекта - это все кадры эпизодической памяти EpisodicTreeNode, где он участвует.
В каждом кадре есть связь с тем, к чему привели недавние действия (следующие эпизоды памяти после ObjModel.ID)
и есть полное описание условий того момента (из EpisodicTreeNodeFromID[ObjModel.ID]).

Становится возможным использовать схожесть моделей (совместное учатие в эпизоде) для предположения свойств.

В отличие от значимотей объектов внимания (importance.go)
здесь рассматриваются только эффекты правил, в которых участвует объект.
*/

package psychic

/////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////

/*
	Элемент отдельного эпизода с Правилами типа объект данного типа (лштв) -> эффект в условиях кадра ID эп.памяти

для вывода всех таких Правил в эпиз.памяти - Модель понимания значимости объекта.
Используется для выборки Модели понимания Правил
*/
type RulesModel struct { //
	ID     int // ID эпиз памяти
	Stimul int // Стимул
	Answer int // Ответ
	Effect int // эффект от действий
	Count  int // сила эффекта - число подтверждений
	//Importence int // значимость стимула (Trigger если Effect<100 или Action если Effect==100) -  не используется здесь
}

/*
	Временный массив создается только на время его инфо-обработки в understanding_model_rules.go

Перед каждой выборкой очищается UnderstandingRulesModel = nil
Для каждого экстремального объекта делается своя выборка кадров при сканировании всего дерева эпиз.памяти.
*/
var UnderstandingRulesModel []RulesModel

///////////////////////////////////////////////////////
